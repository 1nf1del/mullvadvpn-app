/**
 * Flow annotations for Electron
 * @flow
 */

declare module 'electron' {

  // common types

  declare type Size = {
    width: number;
    height: number;
  }

  declare type Rectangle = {
    width: number;
    height: number;
    x: number;
    y: number;
  }

  // http://electron.atom.io/docs/api/native-image

  declare class NativeImage {
    isEmpty(): boolean;
    getSize(): Size;
  }

  declare var nativeImage: {
    createEmpty(): NativeImage,
    createFromPath(path: string): NativeImage,
    createFromBuffer(buffer: Buffer, scaleFactor?: number): NativeImage,
    createFromDataURL(dataURL: string): NativeImage,
  }

  // http://electron.atom.io/docs/api/tray

  declare type TrayEvent = 'click' | 'double-click'
  declare class Tray {
    constructor(image: NativeImage | string): void;
    getBounds(): Rectangle;
    setHighlightMode(mode: 'selection' | 'always' | 'never'): void;
    setImage(image: NativeImage | string): void;
    setPressedImage(image: NativeImage | string): void;

    on(event: TrayEvent, listener: Function): this;
    once(event: TrayEvent, listener: Function): this;
    removeEventListener(event: TrayEvent, listener: Function): this;
  }

}