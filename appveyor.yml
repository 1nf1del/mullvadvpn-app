# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

environment:
  global:
  # This is the Rust channel that build jobs will use by default but can be
  # overridden on a case by case basis down below
    RUST_VERSION: stable

  # These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  matrix:
    # MinGW
    - TARGET: i686-pc-windows-gnu
    - TARGET: x86_64-pc-windows-gnu

    # MSVC
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

    # Testing other channels
    - TARGET: x86_64-pc-windows-gnu
      RUST_VERSION: nightly
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  # Download Rust differently for nightly since there are some checksum problems when using rustup
  - ps: >-
      If ($Env:RUST_VERSION -eq 'nightly') {
        Start-FileDownload "https://static.rust-lang.org/dist/rust-${env:RUST_VERSION}-${env:TARGET}.exe"
        cmd /c rust-%RUST_VERSION%-%TARGET%.exe /VERYSILENT /NORESTART /DIR="C:\Program Files (x86)\Rust"
        $Env:PATH += ';C:\Program Files (x86)\Rust\bin'
      } Else {
        cmd /c curl -sSf -o rustup-init.exe https://win.rustup.rs/
        cmd /c rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
        $Env:PATH += ';C:\Users\appveyor\.cargo\bin'
      }
  - rustc -Vv
  - cargo -V

# This is the "test phase", tweak it as you see fit
test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% && echo "DEBUG BUILD DONE" &&
      cargo build --target %TARGET% --release && echo "RELEASE BUILD DONE" &&
      cargo test --target %TARGET% && echo "DEBUG TESTING DONE" &&
      cargo test --target %TARGET% --release && echo "RELEASE TESTING DONE"
    )

# Cache build binaries for faster builds next time
cache:
  - C:\Users\appveyor\.cargo\registry
  - target

# Stops feature branches from triggering two builds (One for branch and one for PR)
skip_branch_with_pr: true

# disable automatic builds
build: false
